{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/MyAutoCompleteOriginal.js","webpack:///./src/index.js","webpack:///external {\"this\":[\"wp\",\"blocks\"]}","webpack:///external {\"this\":[\"wp\",\"components\"]}","webpack:///external {\"this\":[\"wp\",\"element\"]}"],"names":["MyAutocomplete","console","log","autocompleters","name","triggerPrefix","options","visual","id","getOptionLabel","option","getOptionKeywords","isOptionDisabled","getOptionCompletion","isExpanded","listBoxId","activeId","registerBlockType","title","description","category","icon","supports","html","edit","save"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","\nimport ContentEditable from 'react-contenteditable'\n\nimport { Autocomplete } from '@wordpress/components';\n\nconst MyAutocomplete = () => {\n    console.log(\"sss\")\n    const autocompleters = [\n        {\n            name: 'fruit',\n            // The prefix that triggers this completer\n            triggerPrefix: '~',\n            // The option data\n            options: [\n                { visual: '🍎', name: 'Apple', id: 1 },\n                { visual: '🍊', name: 'Orange', id: 2 },\n                { visual: '🍇', name: 'Grapes', id: 3 },\n            ],\n            // Returns a label for an option like \"🍊 Orange\"\n            getOptionLabel: option => (\n                <span>\n                    <span className=\"icon\" >{option.visual}</span>{option.name}\n                </span>\n            ),\n            // Declares that options should be matched by their name\n            getOptionKeywords: option => [option.name],\n            // Declares that the Grapes option is disabled\n            isOptionDisabled: option => option.name === 'Grapes',\n            // Declares completions should be inserted as abbreviations\n            getOptionCompletion: option => (\n                <abbr title={option.name}>{option.visual}</abbr>\n            ),\n        }\n    ];\n\n    return (\n        <div>\n            <Autocomplete completers={autocompleters}>\n                {({ isExpanded, listBoxId, activeId }) => (\n                    <div\n                        contentEditable\n                        suppressContentEditableWarning\n                        aria-autocomplete=\"list\"\n                        aria-expanded={isExpanded}\n                        aria-owns={listBoxId}\n                        aria-activedescendant={activeId}\n\n                    >\n                    </div>\n                )}\n            </Autocomplete>\n            <p>Type ~ for triggering the autocomplete.</p>\n        </div>\n    );\n};\n\nexport default MyAutocomplete;\n","import MyAutocomplete from './MyAutoCompleteOriginal'; // adjust if you saved this file somewhere else.\nimport { registerBlockType } from '@wordpress/blocks';\n\nregisterBlockType('create-block/gutenpride', {\n    title: 'Gutenpride',\n    description: 'Example block.',\n    category: 'formatting',\n    icon: 'smiley',\n    supports: {\n        // Removes support for an HTML mode.\n        html: false,\n    },\n\n    edit: () => {\n        console.log(\"sss\")\n        return <div> <MyAutocomplete /></div>;\n    },\n\n    save: () => {\n        return <div> Hello in Save.</div>;\n    },\n});\n","(function() { module.exports = this[\"wp\"][\"blocks\"]; }());","(function() { module.exports = this[\"wp\"][\"components\"]; }());","(function() { module.exports = this[\"wp\"][\"element\"]; }());"],"sourceRoot":""}